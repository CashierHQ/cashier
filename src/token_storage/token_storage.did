type AddTokenInput = record {
  decimals : opt nat8;
  chain : text;
  ledger_id : opt principal;
  enabled : opt bool;
  index_id : opt principal;
  unknown : opt bool;
  symbol : opt text;
};
type Chain = variant { IC };
type RemoveTokenInput = record { chain : text; ledger_id : opt principal };
type Result = variant { Ok; Err : text };
type Result_1 = variant { Ok : vec UserTokenDto; Err : text };
type Result_2 = variant { Ok : UserPreference; Err : text };
type UserPreference = record {
  hide_zero_balance : bool;
  selected_chain : vec Chain;
  hide_unknown_token : bool;
};
type UserPreferenceInput = record {
  hide_zero_balance : bool;
  selected_chain : vec text;
  hide_unknown_token : bool;
};
type UserTokenDto = record {
  decimals : opt nat8;
  chain : text;
  enabled : bool;
  icrc_ledger_id : opt principal;
  icrc_index_id : opt principal;
  unknown : bool;
  symbol : opt text;
};
service : {
  add_token : (AddTokenInput) -> (Result);
  default_list_tokens : () -> (Result_1) query;
  get_user_preference : () -> (Result_2) query;
  list_tokens : () -> (Result_1) query;
  remove_token : (RemoveTokenInput) -> (Result);
  reset : (text) -> (Result);
  update_user_preference : (UserPreferenceInput) -> (Result);
}
