type Action = record {
  arg : text;
  method : text;
  canister_id : text;
  label : text;
};
type AssetAirdropInfo = record {
  chain : Chain;
  address : text;
  amount : nat32;
};
type Chain = variant { IC };
type LinkDetail = record {
  id : text;
  title : text;
  creator : text;
  asset_info : AssetAirdropInfo;
  link_type : LinkType;
  description : text;
  actions : vec Action;
  state : State;
  template : Template;
  image : text;
};
type LinkType = variant { NftCreateAndAirdrop };
type Result = variant { Ok; Err : text };
type Result_1 = variant { Ok : vec LinkDetail; Err : text };
type Result_2 = variant { Ok : User; Err : text };
type State = variant { New; Inactive; Active; PendingPreview; PendingDetail };
type Template = variant { Left; Right; Central };
type User = record { id : text; email : opt text; wallet : text };
service : {
  create_user : () -> (Result);
  get_links : () -> (Result_1) query;
  get_user : () -> (Result_2) query;
}
